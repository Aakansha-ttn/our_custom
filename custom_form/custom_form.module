<?php
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\node\Entity\NodeType;

function custom_form_theme($existing, $type, $theme, $path){
return [
    'table_list' => [
        'variables' => [
            'header' => null,
            'row' => null,
        ],
    ],
     'content_show' => [
        'variables' => [
            'header' => null,
            'rows' => null,
        ],
    ],
    'show_variable' => [
        'variables' => [
            'var' => null,
        ],
    ],
];
}

function custom_form_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {

  // (Example assuming a view with an exposed filter on node title.)
  // If the input for the title filter is a positive integer, filter against
  // node ID instead of node title.
  // $var ="hi";
  // die('test');
  // kint($view);die;
  if($view->id() == 'book_listing'){
    if($view->current_display == 'page_1'){
    $date = date('m/d/Y h:i:s a', time());
    // dump($date);die;
    $title = $view->getTitle();
    $view->setTitle($title. ' -(Todays date and Time - '.$date. ')');
    }
 }
  if ($view->current_display == 'page_1' && is_numeric($view->exposed_raw_input['title']) && $view->exposed_raw_input['title'] ) {
    // if ($view->current_display == 'page_1') {
    // die('test');
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      // die('hello');
      foreach ($condition_group['conditions'] as &$condition) {
        // kint($condition);die;

        // If this is the part of the query filtering on title, change the
        // condition to filter on node ID.
        // kint($condition['field']);
        if ($condition['field'] == 'node_field_data.title') {
          // kint($condition);
          $condition = [
            'field' => 'node_field_data.nid',
            'value' => $view->exposed_raw_input['title'],
            'operator' => '=',
          ];
        }
      }

    }
    // kint($query->where);
  }

}

// /**
//  * Implements hook_views_post_render().
//  */
// function custom_form_views_post_render(ViewExecutable $view) {
//   // $field = $fields[$title]->getValue();
//   $fields = "My custom title";
//   // kint($content);die;

//   // Set the view title.
//   $view->setTitle($fields);
//   // Set the route title.
//   $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
//   $route->setDefault('_title', $fields);
//   // kint($route);die;
// }

// /**
//  * Implements hook_entity_extra_field_info().
//  */

// function HOOK_preprocess_views_view_field(&$variables) {
// 	$view = $variables['view'];
// 	$fields = $variables['fields'];
// 	if ($view->storage->id() == 'book_listing' && $view->current_display == 'page_1' && $fields->fields == 'title') {
		
// 		$variables['fields'] = "Your NEW Output!";

// 	}
// }


function custom_form_views_pre_render(ViewExecutable $view) {
  if($view->id() == 'book_listing'){
    foreach($view->result as $value){
      // kint($value->_entity->get('title')->value);
      $str = str_replace("TTN", "To The New", $value->_entity->get('title')->value);
      // dump($str);
      $value->_entity->set('title', $str.  ' abc ');
    }
    // die;
  }
}

 

// function custom_form_preprocess_student(&$variables, $hook) {
//   kint($variables);die;
// }

// function custom_form_preprocess_paragraph(&$vars) {
//   dump($vars);die;
// }

// function custom_form_form_node_form_alter(&$form, \Drupal\Core\Form\FormStateInterface  $form_state, $form_id) { 
//   $node = $form_state->getFormObject()->getEntity();
//   kint($node);die;
//   if ($node->getType() != 'institute') {
//   }
//   }

function custom_form_field_widget_paragraphs_form_alter(&$element, &$form_state, $context) {
  if ($element['#paragraph_type'] == 'student') { 
    // $student = $form_state->getValue('field_name');
    // kint($element);
    // $element['subform']['field_image']['widget'][0]['#prefix'] = '<div class="mydiv">';
    // $element['subform']['field_image']['widget'][0]['#suffix'] = '</div>';  
    // $element['subform']['field_image']['#attributes']['class'][] = 'myclass';
    $element['subform']['field_name']['widget'][0]['#default_value'] = "test value";
    // $element['#prefix'] = '<div id="edit-student-page">';
    // $element['#suffix'] = '</div>'; 
    // kint($element);die;
    // kint($context);die;
  }
}

function custom_form_preprocess_paragraph(&$vars) {
  // kint($vars);die;
  $vars['content']['field_image'][0]['#prefix'] = '<div class="mydiv">';
     $vars['content']['field_image'][0]['#suffix'] = '</div>';
 }

// function custom_form_set_defaults($entity_type, $bundle) {
//   kint($entity_type, $bundle);die;
// }
// function field_name_set_defaults($info = array()) {
//   kint("hi");die;
// }